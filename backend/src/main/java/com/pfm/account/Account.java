package com.pfm.account;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.pfm.account.type.AccountType;
import com.pfm.currency.Currency;
import com.pfm.history.HistoryField;
import io.swagger.v3.oas.annotations.media.Schema;
import java.math.BigDecimal;
import java.time.LocalDate;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.ManyToOne;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@Builder
@Entity
@AllArgsConstructor
@NoArgsConstructor
public final class Account {

  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  @Schema(description = "Account id (generated by application)", required = true, example = "1")
  private Long id;

  @Schema(description = "Account name", required = true, example = "Alior Bank savings account")
  @HistoryField
  private String name;

  @Schema(description = "Account's balance", required = true, example = "1438.89")
  @HistoryField
  private BigDecimal balance;

  @ManyToOne // TODO should not return all currency information, only id
  @Schema(description = "Account's currency", required = true)
  private Currency currency;

  @ManyToOne // TODO should not return all account type information, only id
  @Schema(description = "Account's type", required = true)
  private AccountType type;

  @Schema(description = "Account's last verification date", example = "2019-01-31")
  private LocalDate lastVerificationDate;

  @JsonIgnore
  private Long userId;

  @HistoryField
  @Schema(description = "Information if account is archived", example = "false")
  private boolean archived;

}
